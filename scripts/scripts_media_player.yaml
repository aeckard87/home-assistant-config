##################################################################################################
## Pause Media Players
## - pause any media players that are playing
##################################################################################################
  pause_media_players:
    sequence:
      - condition: template
        value_template: >
          {% set entities = state_attr('group.all_media_players', 'entity_id') %}
          {% set playing = states.media_player | selectattr('entity_id', 'in', entities)
                                               | selectattr('state','eq','playing')
                                               | map(attribute='entity_id')
                                               | list
                                               | length %}
          {{ playing >= 1 }}

      - service: media_player.media_pause
        data_template:
          entity_id: >
            {% set entities = state_attr('group.all_media_players', 'entity_id') %}
            {{ states.media_player | selectattr('entity_id', 'in', entities)
                                   | selectattr('state','eq','playing')
                                   | map(attribute='entity_id')
                                   | join(', ') }}

##################################################################################################
## Pause Announcement Media Players
## - pause any announcement media players that are playing
##################################################################################################
  pause_announcement_media_players:
    sequence:
      - condition: template
        value_template: >
          {% set entities = state_attr('group.announcement_media_players', 'entity_id') %}
          {% set playing = states.media_player | selectattr('entity_id', 'in', entities)
                                               | selectattr('state','eq','playing')
                                               | map(attribute='entity_id')
                                               | list
                                               | length %}
          {{ playing >= 1 }}

      - service: media_player.media_pause
        data_template:
          entity_id: >
            {% set entities = state_attr('group.announcement_media_players', 'entity_id') %}
            {{ states.media_player | selectattr('entity_id', 'in', entities)
                                   | selectattr('state','eq','playing')
                                   | map(attribute='entity_id')
                                   | join(', ') }}

##################################################################################################
## Resume Media Players
## - resume any paused media players
##################################################################################################
  resume_media_players:
    sequence:
      # don't run if there is an active house alarm alert
      - condition: state
        entity_id: binary_sensor.house_alarm_active_alert
        state: 'off'

      - service: script.restore_media_player_volumes

      - condition: template
        value_template: >
          {% set entities = state_attr('group.all_media_players', 'entity_id') %}
          {% set paused = states.media_player | selectattr('entity_id', 'in', entities)
                                              | selectattr('state','eq','paused')
                                              | map(attribute='entity_id')
                                              | list
                                              | length %}
          {{ paused >= 1 }}

      - service: media_player.media_play
        data_template:
          entity_id: >
            {% set entities = state_attr('group.all_media_players', 'entity_id') %}
            {{ states.media_player | selectattr('entity_id', 'in', entities)
                                   | selectattr('state','eq','paused')
                                   | map(attribute='entity_id')
                                   | join(', ') }}

##################################################################################################
## Resume Announcement Media Players
## - spotify/neflix etc killed on play_announcement, cannot resume
##################################################################################################
  resume_announcement_media_players:
    sequence:
      - condition: template
        value_template: >
          {% set entities = state_attr('group.announcement_media_players', 'entity_id') %}
          {% set paused = states.media_player | selectattr('entity_id', 'in', entities)
                                               | selectattr('state','eq','paused')
                                               | map(attribute='entity_id')
                                               | list
                                               | length %}
          {{ paused >= 1 }}

      - service: media_player.media_play
        data_template:
          entity_id: >
            {% set entities = state_attr('group.announcement_media_players', 'entity_id') %}
            {{ states.media_player | selectattr('entity_id', 'in', entities)
                                   | selectattr('state','eq','paused')
                                   | map(attribute='entity_id')
                                   | join(', ') }}

##################################################################################################
## Restore Media Player Volumes
##################################################################################################
  restore_media_player_volumes:
    sequence:
      # don't run if there is an active house alarm alert
      - condition: state
        entity_id: binary_sensor.house_alarm_active_alert
        state: 'off'

      # turn automation off to avoid recursive calls
      - service: automation.turn_off
        entity_id: automation.media_player_volume_change

      - service_template: >-
          {% if not is_state('media_player.all_speakers','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.all_speakers
          volume_level: "{{ states('input_number.all_speakers_volume') | float }}"

      - service_template: >-
          {% if not is_state('media_player.broadcast_speakers','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.broadcast_speakers
          volume_level: "{{ states('input_number.broadcast_speakers_volume') | float }}"

      - service_template: >-
          {% if not is_state('media_player.music_speakers','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.music_speakers
          volume_level: "{{ states('input_number.music_speakers_volume') | float }}"

      - service_template: >-
          {% if not is_state('media_player.dining_room_speaker','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.dining_room_speaker
          volume_level: "{{ states('input_number.dining_room_speaker_volume') | float }}"

      - service_template: >-
          {% if not is_state('media_player.bedroom_speaker','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.bedroom_speaker
          volume_level: "{{ states('input_number.bedroom_speaker_volume') | float }}"

      - service_template: >-
          {% if not is_state('media_player.living_room_tv','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.living_room_tv
          volume_level: "{{ states('input_number.living_room_tv_volume') | float }}"

      - service_template: >-
          {% if not is_state('media_player.bedroom_tv','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.bedroom_tv
          volume_level: "{{ states('input_number.bedroom_tv_volume') | float }}"

      - service_template: >-
          {% if not is_state('media_player.deck_tv','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.deck_tv
          volume_level: "{{ states('input_number.deck_tv_volume') | float }}"

      # browswer media players - must test for unknown, unavailable
      - service_template: >-
          {% if not is_state('media_player.jlaptop_chrome','off')
            and not is_state('media_player.jlaptop_chrome','unknown')
            and not is_state('media_player.jlaptop_chrome','unavailable') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.deck_tv
          volume_level: "{{ states('input_number.jlaptop_chrome') | float }}"

      - service_template: >-
          {% if not is_state('media_player.jwork_chrome','off')
            and not is_state('media_player.jwork_chrome','unknown')
            and not is_state('media_player.jwork_chrome','unavailable') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.deck_tv
          volume_level: "{{ states('input_number.jwork_chrome') | float }}"

      - service_template: >-
          {% if not is_state('media_player.jwork_chrome','off')
            and not is_state('media_player.jwork_chrome','unknown')
            and not is_state('media_player.jwork_chrome','unavailable') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.deck_tv
          volume_level: "{{ states('input_number.jphone_chrome') | float }}"

      - service_template: >-
          {% if not is_state('media_player.sphone_chrome','off')
            and not is_state('media_player.sphone_chrome','unknown')
            and not is_state('media_player.sphone_chrome','unavailable') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.deck_tv
          volume_level: "{{ states('input_number.sphone_chrome') | float }}"

      # delay to allow state changes to register
      - delay: '0:00:02'

      # turn automation back on
      - service: automation.turn_on
        entity_id: automation.media_player_volume_change

##################################################################################################
## Restore Announcment Media Player Volumes
##################################################################################################
  restore_announcement_media_player_volumes:
    sequence:
      # don't run if there is an active house alarm alert
      - condition: state
        entity_id: binary_sensor.house_alarm_active_alert
        state: 'off'

      # turn automation off to avoid recursive calls
      - service: automation.turn_off
        entity_id: automation.media_player_volume_change

      # set volume levels to stored value
      - service_template: >-
          {% if not is_state('media_player.broadcast_speakers','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.broadcast_speakers
          volume_level: "{{ states('input_number.broadcast_speakers_volume') | float }}"

      - service_template: >-
          {% if not is_state('media_player.dining_room_speaker','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.dining_room_speaker
          volume_level: "{{ states('input_number.dining_room_speaker_volume') | float }}"

      - service_template: >-
          {% if not is_state('media_player.bedroom_speaker','off') %}
            media_player.volume_set
          {% else %}
            script.null_script
          {% endif %}
        data_template:
          entity_id: media_player.bedroom_speaker
          volume_level: "{{ states('input_number.bedroom_speaker_volume') | float }}"

      # delay to allow state changes to register
      - delay: '0:00:05'

      # turn automation back on
      - service: automation.turn_on
        entity_id: automation.media_player_volume_change

##################################################################################################
## Media Players Night Volume
## media player volumes to night volume if not already lower
## occupant can turn back up manually if required
## set the input_number volumes to night volume then set the media player volume from that
## so night volume will be set for media players that are off
##################################################################################################
  media_players_night_volume:
    sequence:
      # set the radio volume
      - service: input_number.set_value
        data_template:
          entity_id: input_number.radio_volume
          value: >-
            {% if states('input_number.radio_volume') | float > states('input_number.night_announcement_volume') | float %}
              {{ states('input_number.night_announcement_volume') | float }}
            {% else %}
              {{ states('input_number.radio_volume') | float }}
            {% endif %}

      # set media player input_numbers volume to night volumes if necessary
      - service: input_number.set_value
        data_template:
          entity_id: input_number.all_speakers_volume
          value: >-
            {% if states('input_number.all_speakers_volume') | float > states('input_number.night_announcement_volume') | float / 100 %}
              {{ states('input_number.night_announcement_volume') | float / 100 }}
            {% else %}
              {{ states('input_number.all_speakers_volume') | float }}
            {% endif %}

      - service: input_number.set_value
        data_template:
          entity_id: input_number.broadcast_speakers_volume
          value: >-
            {% if states('input_number.broadcast_speakers_volume') | float > states('input_number.night_announcement_volume') | float / 100  %}
              {{ states('input_number.night_announcement_volume') | float / 100 }}
            {% else %}
              {{ states('input_number.broadcast_speakers_volume') | float }}
            {% endif %}

      - service: input_number.set_value
        data_template:
          entity_id: input_number.music_speakers_volume
          value: >-
            {% if states('input_number.music_speakers_volume') | float > states('input_number.night_announcement_volume') | float / 100  %}
              {{ states('input_number.night_announcement_volume') | float / 100 }}
            {% else %}
              {{ states('input_number.music_speakers_volume') | float }}
            {% endif %}

      - service: input_number.set_value
        data_template:
          entity_id: input_number.dining_room_speaker_volume
          value: >-
            {% if states('input_number.dining_room_speaker_volume') | float > states('input_number.night_announcement_volume') | float / 100  %}
              {{ states('input_number.night_announcement_volume') | float / 100 }}
            {% else %}
              {{ states('input_number.dining_room_speaker_volume') | float }}
            {% endif %}

      - service: input_number.set_value
        data_template:
          entity_id: input_number.bedroom_speaker_volume
          value: >-
            {% if states('input_number.bedroom_speaker_volume') | float > states('input_number.night_announcement_volume') | float / 100 %}
              {{ states('input_number.night_announcement_volume') | float / 100 }}
            {% else %}
              {{ state_attr('media_player.bedroom_speaker','volume_level') | float }}
            {% endif %}

      - service: input_number.set_value
        data_template:
          entity_id: input_number.living_room_tv_volume
          value: >-
            {% if states('input_number.living_room_tv_volume') | float > states('input_number.night_announcement_volume') | float / 100 %}
              {{ states('input_number.night_announcement_volume') | float / 100 }}
            {% else %}
              {{ states('input_number.living_room_tv_volume') | float }}
            {% endif %}

      - service: input_number.set_value
        data_template:
          entity_id: input_number.bedroom_tv_volume
          value: >-
            {% if states('input_number.bedroom_tv_volume') | float > states('input_number.night_announcement_volume') | float / 100 %}
              {{ states('input_number.night_announcement_volume') | float / 100 }}
            {% else %}
              {{ states('input_number.bedroom_tv_volume') | float }}
            {% endif %}

      - service: input_number.set_value
        data_template:
          entity_id: input_number.deck_tv_volume
          value: >-
            {% if states('input_number.deck_tv_volume') | float > states('input_number.night_announcement_volume') | float / 100 %}
              {{ states('input_number.night_announcement_volume') | float / 100 }}
            {% else %}
              {{ states('input_number.deck_tv_volume') | float }}
            {% endif %}

      # set media players volumes to value stored in input_number
      # this will either be original volume or night volume
      - service: script.restore_media_player_volumes
