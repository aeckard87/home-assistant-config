##################################################################################################
## House Climate - Update Thermostat
##################################################################################################
  - id: house_climate_update_thermostat
    alias: "[House Climate] Update Thermostat"
    description: "Update climate controls/thermostat when temps changed in Hassio."
    initial_state: 'on'

    trigger:
      # run this anytime temp sliders change
      - platform: state
        entity_id:
          - input_number.home_heat_temperature
          - input_number.home_cool_temperature
          - input_number.night_heat_temperature
          - input_number.night_cool_temperature
          - input_number.guest_heat_temperature
          - input_number.guest_cool_temperature

    action:
      # disable update climate automation to avoid recursive calls
      - service: automation.turn_off
        data:
          entity_id: automation.house_climate_update_thermostat

      # reset temps if heat/cool temps closer than 3 degrees (req for auto)
      - service: input_number.set_value
        data_template:
          entity_id: '{{ trigger.entity_id }}'
          value: >-
            {% if trigger.entity_id == 'input_number.home_heat_temperature' or trigger.entity_id == 'input_number.home_cool_temperature' %}
              {% if (states('input_number.home_cool_temperature') | int - states('input_number.home_heat_temperature') | int) | abs  < 3 %}
                {% if trigger.entity_id == 'input_number.home_heat_temperature' %}
                  {{ states('input_number.home_cool_temperature') | int - 3 | float }}
                {% else %}
                  {{ states('input_number.home_heat_temperature') | int + 3 | float }}
                {% endif %}
              {% else %}
                {{ trigger.to_state.state | float }}
              {% endif %}
            {% elif trigger.entity_id == 'input_number.night_heat_temperature' or trigger.entity_id == 'input_number.night_cool_temperature' %}
              {% if (states('input_number.night_cool_temperature') | int - states('input_number.night_heat_temperature') | int) | abs  < 3 %}
                {% if trigger.entity_id == 'input_number.night_heat_temperature' %}
                  {{ states('input_number.night_cool_temperature') | int - 3 | float }}
                {% else %}
                  {{ states('input_number.night_heat_temperature') | int + 3 | float }}
                {% endif %}
              {% else %}
                {{ trigger.to_state.state | float }}
              {% endif %}
            {% elif trigger.entity_id == 'input_number.guest_heat_temperature' or trigger.entity_id == 'input_number.guest_cool_temperature' %}
              {% if (states('input_number.guest_cool_temperature') | int - states('input_number.guest_heat_temperature') | int) | abs  < 3 %}
                {% if trigger.entity_id == 'input_number.guest_heat_temperature' %}
                  {{ states('input_number.guest_cool_temperature') | int - 3 | float }}
                {% else %}
                  {{ states('input_number.guest_heat_temperature') | int + 3 | float }}
                {% endif %}
              {% else %}
                {{ trigger.to_state.state | float }}
              {% endif %}
            {% else %}
              {{ trigger.to_state.state | float }}
            {% endif %}

      # if changed temp mode = current mode set the current climate temperatures
      - service_template: >-
          {% if (trigger.entity_id == 'input_number.home_heat_temperature'
            or trigger.entity_id == 'input_number.home_cool_temperature')
            and is_state('input_select.occupancy_mode', 'Home') %}
            script.set_climate_temperature
          {% elif (trigger.entity_id == 'input_number.night_heat_temperature'
            or trigger.entity_id == 'input_number.night_cool_temperature')
            and is_state('input_select.occupancy_mode', 'Night') %}
            script.set_climate_temperature
          {% elif (trigger.entity_id == 'input_number.guest_heat_temperature'
            or trigger.entity_id == 'input_number.guest_cool_temperature')
            and is_state('input_select.occupancy_mode', 'Guest') %}
            script.set_climate_temperature
          {% else %} script.null_script
          {% endif %}

      # delay to allow state changes to register
      - delay: '0:00:05'

      # turn update_climate automation back on
      - service: automation.turn_on
        data:
          entity_id: automation.house_climate_update_thermostat

##################################################################################################
## House Climate - Occupancy Mode Control
##################################################################################################
  - id: house_climate_occupancy_mode_control
    alias: "[House Climate] Occupancy Mode Control"
    description: "Set climate modes according to occupancy mode."
    initial_state: 'on'

    trigger:
      # run when occupancy mode changes
      - platform: state
        entity_id: input_select.occupancy_mode

    condition:
      - condition: and
        conditions:
          # only run if manual mode is off
          - condition: state
            entity_id: input_boolean.manual_mode
            state: 'off'

          # only run if house climate automation is enabled
          - condition: state
            entity_id: input_boolean.house_climate_automation
            state: 'on'

    action:
      # if modes changed quickly set_climate_temperature might still be running!
      - wait_template: "{{ is_state('script.set_climate_temperature', 'off') }}"
        timeout: '00:02:00'
        continue_on_timeout: false

      # set climate controls
      - service: script.set_climate_temperature

##################################################################################################
## House Climate - Mode Changed
## - must be disabled in script.climate_set_temperature or we get recursive call
##################################################################################################
  - id: house_climate_mode_changed
    alias: "[House Climate] Mode Changed"
    description: "Reset temperatures to preset values when HVAC mode has changed."
    initial_state: 'on'

    trigger:
      # run when nest climate mode has changed
      - platform: state
        entity_id: sensor.upstairs_thermostat_operation_mode

    condition:
      - condition: and
        conditions:
          # only run if manual mode is off
          - condition: state
            entity_id: input_boolean.manual_mode
            state: 'off'

          # only run if house climate automation is enabled
          - condition: state
            entity_id: input_boolean.house_climate_automation
            state: 'on'

    action:
      # if modes changed quickly set_climate_temperature might still be running!
      - wait_template: "{{ is_state('script.set_climate_temperature', 'off') }}"
        timeout: '00:02:00'
        continue_on_timeout: false

      # only continue if HVAC not set to off
      - condition: template
        value_template: "{{ not is_state('climate.upstairs_thermostat','off') }}"

      # run set climate temperature script to reset temperatures to set values
      - service: script.set_climate_temperature

##################################################################################################
## House Climate - HVAC Fan On (template fan)
##################################################################################################
  - id: house_climate_hvac_fan_on
    alias: "[House Climate] HVAC Fan On"
    description: "Turn HVAC fan on when boolean turns on."
    initial_state: 'on'

    trigger:
      - platform: state
        entity_id: input_boolean.hvac_fan_control
        to: 'on'

    action:
      - service: climate.set_fan_mode
        entity_id: climate.upstairs_thermostat
        data:
          fan_mode: 'on'

##################################################################################################
## House Climate - HVAC Fan Off (template fan)
##################################################################################################
  - id: house_climate_hvac_fan_off
    alias: "[House Climate] HVAC Fan Off"
    description: "Turn HVAC fan off when boolean turns off."
    initial_state: 'on'

    trigger:
      - platform: state
        entity_id: input_boolean.hvac_fan_control
        to: 'off'

    action:
      - service: climate.set_fan_mode
        entity_id: climate.upstairs_thermostat
        data:
          fan_mode: 'auto'

##################################################################################################
## House Climate - Low Temperature Alert
##################################################################################################
  - id: house_climate_low_temperature_alert
    alias: "[House Climate] Low Temperature Alert"
    description: "Send notification when low temperature alert turns on."
    initial_state: 'on'

    trigger:
      # run when the indoor low temperature alert is on
      - platform: state
        entity_id: binary_sensor.low_temperature_alert
        to: 'on'

    condition:
      - condition: and
        conditions:
          # only run if silent mode is off
          - condition: state
            entity_id: input_boolean.silent_mode
            state: 'off'

          # only run if house climate automation is enabled
          - condition: state
            entity_id: input_boolean.house_climate_automation
            state: 'on'

    action:
      # send push notification
      - service: notify.push
        data_template:
          title: "Low Temperature Alert"
          message: "The indoor temperature is {{ states('sensor.upstairs_thermostat_temperature') }} degrees."
          target:
            - jphone
            - jlaptop
          data:
            actions:
              - action: 'climate_low_temperature_alert_pause'
                title: "Pause Alerts"
                icon: !secret PAUSE_BUTTON
            tag: 'climate_low_temperature_alert'
            timestamp: "{{ as_timestamp(now()) }}"
            renotify: true
            ttl: 43200
            priority: high
            requireInteraction: true
            silent: false
            url: '/lovelace/climate'
            icon: !secret LOW_TEMP_ICON
            image: !secret LOW_TEMP_IMAGE
            badge: !secret LOW_TEMP_BADGE

      # wait for other announcments to finish playing
      - wait_template: "{{ is_state('script.play_announcement', 'off') }}"
        timeout: '0:01:00'
        continue_on_timeout: true

      # play announcement
      - service: script.play_announcement
        data_template:
          play_message: "Attention! The indoor low temperature alert is active. The current indoor temperature is {{ states('sensor.upstairs_thermostat_temperature') }} degrees."
          quiet_play: 'true'

###################################################################################################
## House Cliamte - Low Temperature Notification Closed
###################################################################################################
  - id: house_climate_low_temperature_notification_closed
    alias: "[House Cliamte] Low Temperature Notification Closed"
    description: "Dismiss notifications on all devices when closed on one."
    initial_state: 'on'

    trigger:
      # run when notification button clicked
      - platform: event
        event_type: html5_notification.closed
        event_data:
          action: 'climate_low_temperature_alert'

    action:
      # dismiss push notifications for all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'climate_low_temperature_alert'

###################################################################################################
## House Climate - Low Temperature Alert Cancelled
###################################################################################################
  - id: house_climate_low_temperature_alert_cancelled
    alias: "[House Climate] Low Temperature Alert Cancelled"
    description: "Dismiss notifications when low temperature alert turns off."
    initial_state: 'on'

    trigger:
      # run when the low temperature alert turns off
      - platform: state
        entity_id: binary_sensor.low_temperature_alert
        to: 'off'

    action:
      # dismiss push notifications for all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'climate_low_temperature_alert'

##################################################################################################
## House Climate - Low Temperature Alert Off
##################################################################################################
  - id: house_climate_low_temperature_alert_pause
    alias: "[House Climate] Low Temperature Alert Off"
    description: "Dismiss notifications and temporarily turn off alert automation."
    initial_state: 'on'

    trigger:
      # run when notification button clicked
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: 'climate_low_temperature_alert_pause'

    action:
      # dismiss push notifications for all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'climate_low_temperature_alert'

      # turn off alert automation
      - service: automation.turn_off
        entity_id: automation.house_climate_low_temperature_alert

      # wait for timeout or automation to be turned back on
      - wait_template: "{{ is_state('automation.house_climate_low_temperature_alert', 'on') }}"
        timeout: '04:00:00' # mute alert for 4 hours
        continue_on_timeout: true

      # turn alert automation back on
      - service: automation.turn_on
        entity_id: automation.house_climate_low_temperature_alert

##################################################################################################
## House Climate - High Temperature Alert
##################################################################################################
  - id: house_climate_high_temperature_alert
    alias: "[House Climate] High Temperature Alert"
    description: "Send notification when high temperature alert turns on."
    initial_state: 'on'

    trigger:
      # run when the indoor high temperature alert is on
      - platform: state
        entity_id: binary_sensor.high_temperature_alert
        to: 'on'

      #IDEA change to individual sensor triggers so we can report which sensor triggered alert
      # we would have to hard code alert value, can't get trigger.entity_id from template trigger
      # also would have to lose notification image to fit extra text
      # - platform: numeric_state
      #   entity_id: sensor.upstairs_thermostat_temperature
      #   above: 85

    condition:
      - condition: and
        conditions:
          # only run if silent mode is off
          - condition: state
            entity_id: input_boolean.silent_mode
            state: 'off'

          # only run if house climate automation is enabled
          - condition: state
            entity_id: input_boolean.house_climate_automation
            state: 'on'

    action:
      # send push notification
      - service: notify.push
        data_template:
          title: "High Temperature Alert"
          message: "The indoor temperature is {{ states('sensor.upstairs_thermostat_temperature') }} degrees."
          target:
            - jphone
            - jlaptop
          data:
            actions:
              - action: 'climate_high_temperature_alert_pause'
                title: "Pause Alerts"
                icon: !secret PAUSE_BUTTON
            tag: 'climate_high_temperature_alert'
            timestamp: "{{ as_timestamp(now()) }}"
            renotify: true
            ttl: 43200
            priority: high
            requireInteraction: true
            silent: false
            url: '/lovelace/climate'
            icon: !secret HIGH_TEMP_ICON
            image: !secret HIGH_TEMP_IMAGE
            badge: !secret HIGH_TEMP_BADGE

      # wait for any other announcments to finish
      - wait_template: "{{ is_state('script.play_announcement', 'off') }}"
        timeout: '00:01:00'
        continue_on_timeout: true

      # play announcement
      - service: script.play_announcement
        data_template:
          play_message: "Attention! The indoor high temperature alert is active. The current indoor temperature is {{ states('sensor.upstairs_thermostat_temperature') }} degrees."
          quiet_play: 'true'

###################################################################################################
## House Cliamte - High Temperature Notification Closed
###################################################################################################
  - id: house_climate_high_temperature_notification_closed
    alias: "[House Cliamte] High Temperature Notification Closed"
    description: "Dismiss notifications on all devices when closed on one."
    initial_state: 'on'

    trigger:
      # run when notification button clicked
      - platform: event
        event_type: html5_notification.closed
        event_data:
          action: 'climate_high_temperature_alert'

    action:
      # dismiss push notifications for all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'climate_high_temperature_alert'

###################################################################################################
## House Climate - High Temperature Alert Cancelled
###################################################################################################
  - id: house_climate_high_temperature_alert_cancelled
    alias: "[House Climate] High Temperature Alert Cancelled"
    description: "Dismiss notifications when high temperature alert turns off."
    initial_state: 'on'

    trigger:
      # run when the low temperature alert turns off
      - platform: state
        entity_id: binary_sensor.high_temperature_alert
        to: 'off'

    action:
      # dismiss push notifications for all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'climate_high_temperature_alert'

##################################################################################################
## Action - Climate High Temp Alert Off
##################################################################################################
  - id: house_climate_high_temperature_alert_pause
    alias: "[House Climate] High Temperature Alert Off"
    description: "Dismiss notifications and temporarily turn off alert automation."
    initial_state: 'on'

    trigger:
      # run when notification button clicked
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: 'climate_high_temperature_alert_pause'

    action:
      # dismiss push notifications for all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'climate_high_temperature_alert'

      # turn off alert automation
      - service: automation.turn_off
        entity_id: automation.house_climate_high_temperature_alert

      # wait for timeout or automation to be turned back on
      - wait_template: "{{ is_state('automation.house_climate_high_temperature_alert', 'on') }}"
        timeout: '04:00:00' # mute alert for 4 hours
        continue_on_timeout: true

      # turn alert automation back on
      - service: automation.turn_on
        entity_id: automation.house_climate_high_temperature_alert

##################################################################################################
## House Climate - High Humidity Alert
##################################################################################################
  - id: house_climate_high_humidity_alert
    alias: "[House Climate] High Humidity Alert"
    description: "Send notification when high humidity alert turns on."
    initial_state: 'on'

    trigger:
      # run when the indoor high humidity alert is active
      - platform: state
        entity_id: binary_sensor.high_humidity_alert
        to: 'on'

    condition:
      - condition: and
        conditions:
          # only run if silent mode is off
          - condition: state
            entity_id: input_boolean.silent_mode
            state: 'off'

          # only run if house climate automation is enabled
          - condition: state
            entity_id: input_boolean.house_climate_automation
            state: 'on'

    action:
      # send push notification
      - service: notify.push
        data_template:
          title: "High Humidity Alert"
          message: "The indoor humidity is {{ states('sensor.upstairs_thermostat_humidity') }}%."
          target:
            - jphone
            - jlaptop
          data:
            actions:
              - action: 'humidity_alert_pause'
                title: "Pause Alerts"
                icon: !secret PAUSE_BUTTON
            tag: 'humidity_alert'
            timestamp: "{{ as_timestamp(now()) }}"
            renotify: true
            ttl: 43200
            priority: high
            requireInteraction: false
            silent: false
            url: '/lovelace/climate'
            icon: !secret HIGH_HUMIDITY_ICON
            image: !secret HIGH_HUMIDITY_IMAGE
            badge: !secret HIGH_HUMIDITY_BADGE

      # wait for other announcments to finish playing
      - wait_template: "{{ is_state('script.play_announcement', 'off') }}"
        timeout: '00:01:00'
        continue_on_timeout: true

      # play announcement
      - service: script.play_announcement
        data_template:
          play_message: "Attention! The indoor high humidity alert is active. The current indoor humidity is {{ states('sensor.upstairs_thermostat_humidity') }}%"
          quiet_play: 'true'

###################################################################################################
## House Climate - High Humidity Notification Closed
###################################################################################################
  - id: house_climate_high_humidity_notification_closed
    alias: "[House Climate] High Humidity Notification Closed"
    description: "Dismiss notifications on all devices when closed on one."
    initial_state: 'on'

    trigger:
      # run when push notification closed
      - platform: event
        event_type: html5_notification.closed
        event_data:
          tag: 'humidity_alert'

    action:
      # dismiss push notifications on all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'humidity_alert'

###################################################################################################
## House Climate - High Humidity Alert Cancelled
###################################################################################################
  - id: house_climate_high_humidity_alert_cancelled
    alias: "[House Climate] High Humidity Alert Cancelled"
    description: "Dismiss notifications when high humidity alert turns off."
    initial_state: 'on'

    trigger:
      # run when the low temperature alert turns off
      - platform: state
        entity_id: binary_sensor.high_humidity_alert
        to: 'off'
        for: '04:00'

    action:
      # dismiss push notifications for all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'humidity_alert'

##################################################################################################
## House Climate - High Humidity Alert Off
##################################################################################################
  - id: house_climate_high_humidity_alert_pause
    alias: "[House Climate] High Humidity Alert Off"
    description: "Dismiss notifications and temporarily turn off alert automation."
    initial_state: 'on'

    trigger:
      # run when notification button clicked
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: 'humidity_alert_pause'

    action:
      # dismiss push notifications on all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'humidity_alert'

      # turn off alert automation
      - service: automation.turn_off
        entity_id: automation.house_climate_high_humidity_alert

      # wait for timeout or automation to be turned back on
      - wait_template: "{{ is_state('automation.house_climate_high_humidity_alert', 'on') }}"
        timeout: '04:00:00' # mute alert for 4 hours
        continue_on_timeout: true

      # turn alert automation back on
      - service: automation.turn_on
        entity_id: automation.house_climate_high_humidity_alert

##################################################################################################
## House Climate - Mold Risk Alert
##################################################################################################
  - id: house_climate_mold_risk_alert
    alias: "[House Climate] Mold Risk Alert"
    description: "Send notification when mold risk alert is turned on for an hour."
    initial_state: 'on'

    trigger:
      - platform: state
        entity_id: binary_sensor.mold_risk_alert
        to: 'on'
        for: '01:00'

    condition:
      - condition: and
        conditions:
          # only run if silent mode is off
          - condition: state
            entity_id: input_boolean.silent_mode
            state: 'off'

          # only run if house climate automation is enabled
          - condition: state
            entity_id: input_boolean.house_climate_automation
            state: 'on'

    action:
      # send push notification
      - service: notify.push
        data_template:
          title: "Mold Risk Alert"
          message: "Mold risk alert is active.\n{{ as_timestamp(now()) | timestamp_custom('%I:%M%p', true) }}"
          target:
            - jphone
            - jlaptop
          data:
            actions:
              - action: 'mold_alert_pause'
                title: "Pause Alerts"
                icon: !secret PAUSE_BUTTON
            tag: 'mold_alert'
            timestamp: "{{ as_timestamp(now()) }}"
            renotify: true
            ttl: 43200
            priority: high
            requireInteraction: true
            silent: true
            url: '/lovelace/climate'
            icon: !secret MOLD_ICON
            image: !secret MOLD_IMAGE
            badge: !secret MOLD_BADGE

      # wait for any other announcments to finish, avoid skipping play because script already running
      - wait_template: "{{ is_state('script.play_announcement', 'off') }}"
        timeout: '00:01:00'
        continue_on_timeout: false

      # play announcement
      - service: script.play_announcement
        data_template:
          play_message: "The mold risk alert has been active for an hour."
          quiet_play: 'true'

###################################################################################################
## House Climate - Mold Notification Closed
###################################################################################################
  - id: house_climate_mold_notification_closed
    alias: "[House Climate] Mold Notification Closed"
    description: "Dismiss notifications on all devices when closed on one."
    initial_state: 'on'

    trigger:
      # run when push notification closed
      - platform: event
        event_type: html5_notification.closed
        event_data:
          tag: 'mold_alert'

    action:
      # dismiss push notifications on all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'mold_alert'

###################################################################################################
## House Climate - Mold Risk Alert Cancelled
###################################################################################################
  - id: house_climate_mold_risk_alert_cancelled
    alias: "[House Climate] Mold Risk Alert Cancelled"
    description: "Dismiss notifications when mold risk alert turns off."
    initial_state: 'on'

    trigger:
      # run when the mold risk alert turns off
      - platform: state
        entity_id: binary_sensor.mold_alert
        to: 'off'

    action:
      # dismiss push notifications for all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'mold_alert'

##################################################################################################
## House Climate - Mold Risk Alert Pause
##################################################################################################
  - id: house_climate_mold_risk_alert_pause
    alias: "[House Climate] Mold Alert Pause"
    description: "Dismiss notifications and temporarily turn off alert automation."
    initial_state: 'on'

    trigger:
      # run when notification button clicked
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: 'mold_alert_pause'

    action:
      # dismiss push notifications on all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'mold_alert'

      # turn off alert automation
      - service: automation.turn_off
        entity_id: automation.house_climate_mold_risk_alert

      # wait for timeout or automation to be turned back on
      - wait_template: "{{ is_state('automation.house_climate_mold_risk_alert', 'on') }}"
        timeout: '04:00:00' # mute alert for 4 hours
        continue_on_timeout: true

      # turn alert automation back on
      - service: automation.turn_on
        entity_id: automation.house_climate_mold_risk_alert

##################################################################################################
## House Climate - Emergency Heat Alert
## - do not dismiss emergency heat notification automatically, we need to know something was wrong
## - no conditions, always allow
#################################################################################################
  - id: house_climate_emergency_heat_alert
    alias: "[House Climate] Emergency Heat Alert"
    description: "Send notification when emergency heat alert turns on."
    initial_state: 'on'

    trigger:
      # run when emergency heat alert is active
      - entity_id: binary_sensor.upstairs_thermostat_emergency_heat
        platform: state
        to: 'on'

    action:
      # create persistent notification
      - service: persistent_notification.create
        data_template:
          title: &emerg_heat_title "Thermostat Emergency Heat"
          message: &emerg_heat_message "The thermostat is in emergency heat mode.  The temperature is {{ states('sensor.upstairs_thermostat_temperature') }}°.\n{{now().strftime('%H:%M  %Y-%m-%d')}}"
          notification_id: 'thermostat_emergency_heat'

      # send push notification
      - service: notify.push
        data_template:
          title: *emerg_heat_title
          message: *emerg_heat_message
          target:
            - jphone
            - jlaptop
          data:
            actions:
              - action: 'thermostat_emergency_heat_off'
                title: "Pause Alerts"
                icon: !secret PAUSE_BUTTON
            tag: 'thermostat_emergency_heat'
            timestamp: "{{ as_timestamp(now()) }}"
            renotify: true
            ttl: 43200
            priority: high
            requireInteraction: true
            silent: false
            url: '/lovelace/climate'
            icon: !secret LOW_TEMP_ICON
            badge: !secret LOW_TEMP_BADGE

      # wait for any other announcments to finish, avoid skipping play because script already running
      - wait_template: "{{ is_state('script.play_announcement', 'off') }}"
        timeout: '00:01:00'
        continue_on_timeout: false

      # play alert
      - service: script.play_alert
        data_template:
          play_message: "The furnace emergency heat has been activated."
          quiet_play: 'true'

###################################################################################################
## House Climate - Emergency Heat Notification Closed
###################################################################################################
  - id: house_climate_emergency_heat_notification_closed
    alias: "[House Climate] Emergency Heat Notification Closed"
    description: "Dismiss notifications on all devices when closed on one."
    initial_state: 'on'

    trigger:
      # run when push notification closed
      - platform: event
        event_type: html5_notification.closed
        event_data:
          tag: thermostat_emergency_heat

    action:
      # dismiss push notifications on all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: thermostat_emergency_heat

##################################################################################################
## House Climate - Emergency Heat Alert Off
## - do not dismiss persistent notification
##################################################################################################
  - id: house_climate_emergency_heat_alert_pause
    alias: "[House Climate] Emergency Heat Alert Off"
    description: "Dismiss notifications and temporarily turn off alert automation."
    initial_state: 'on'

    trigger:
      # run when notification button clicked
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: thermostat_emergency_heat_off

    action:
      # dismiss push notifications on all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: thermostat_emergency_heat

      # turn off alert automation
      - service: automation.turn_off
        entity_id: automation.house_climate_emergency_heat_alert

      # wait for timeout or automation to be turned back on
      - wait_template: "{{ is_state('automation.house_climate_emergency_heat_alert', 'on') }}"
        timeout: '04:00:00' # mute alert for 4 hours
        continue_on_timeout: true

      # turn alert automation back on
      - service: automation.turn_on
        entity_id: automation.house_climate_emergency_heat_alert

##################################################################################################
## House Climate - Upstairs Thermostat Offline Alert
## - stagger for time with other nest products so push notifications don't exceed allowed messages
##################################################################################################
  - id: house_climate_upstairs_thermostat_offline_alert
    alias: "[House Climate] Upstairs Thermostat Offline Alert"
    description: "Send notification when thermostat goes offline."
    initial_state: 'on'

    trigger:
      # run when upstairs thermostat connected sensor turns off
      - entity_id: binary_sensor.upstairs_thermostat_connected
        platform: state
        to: 'off'
        for: '00:05'

    condition:
      - condition: and
        conditions:
          # only run if silent mode is off
          - condition: state
            entity_id: input_boolean.silent_mode
            state: 'off'

          # only run if house climate automation is enabled
          - condition: state
            entity_id: input_boolean.house_climate_automation
            state: 'on'

    action:
      # create persistent notification
      - service: persistent_notification.create
        data_template:
          title: &thermostat_offline_title "Thermostat Offline"
          message: &thermostat_offline_message "The Upstairs Thermostat is offline.\n{{now().strftime('%H:%M  %Y-%m-%d')}}"
          notification_id: 'upstairs_thermostat_offline'

      # send push notification
      - service: notify.push
        data_template:
          title: *thermostat_offline_title
          message: *thermostat_offline_message
          target:
            - jphone
            - jlaptop
          data:
            actions:
              - action: 'upstairs_thermostat_offline_off'
                title: "Pause Alerts"
                icon: !secret PAUSE_BUTTON
            tag: 'upstairs_thermostat_offline'
            timestamp: "{{ as_timestamp(now()) }}"
            renotify: true
            ttl: 43200
            priority: high
            requireInteraction: true
            silent: false
            url: '/lovelace/climate'
            icon: !secret OFFLINE_ICON
            image: !secret OFFLINE_IMAGE
            badge: !secret OFFLINE_BADGE

###################################################################################################
## House Climate - Thermostat Offline Notification Closed
###################################################################################################
  - id: house_climate_thermostat_offline_notification_closed
    alias: "[House Climate] Thermostat Offline Notification Closed"
    description: "Dismiss notifications on all devices when closed on one."
    initial_state: 'on'

    trigger:
      # run when push notification closed
      - platform: event
        event_type: html5_notification.closed
        event_data:
          tag: 'upstairs_thermostat_offline'

    action:
      # dismiss push notifications on all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'upstairs_thermostat_offline'

##################################################################################################
## House Climate - Thermostat Offline Alert Cancelled
##################################################################################################
  - id: house_climate_thermostat_offline_alert_cancelled
    alias: "[House Climate] Thermostat Offline Alert Cancelled"
    description: "Dismiss notifications when thermostat goes back online."
    initial_state: 'on'

    trigger:
      # run when downstairs protect connected sensor turns on
      - entity_id: binary_sensor.upstairs_thermostat_connected
        platform: state
        to: 'on'

    action:
      # dismiss push notifications
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'upstairs_thermostat_offline'

##################################################################################################
## House Climate - Thermostat Offline Alert Pause
##################################################################################################
  - id: house_climate_thermostat_offline_alert_pause
    alias: "[House Climate] Thermostat Offline Alert Pause"
    description: "Dismiss notifications and temporarily turn off alert automation."
    initial_state: 'on'

    trigger:
      # run when notification button clicked
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: 'upstairs_thermostat_offline_off'

    action:
      # dismiss push notifications on all devices
      - service: notify.html5_dismiss
        data:
          data:
            tag: 'upstairs_thermostat_offline'

      # turn off alert automation
      - service: automation.turn_off
        entity_id: automation.house_climate_upstairs_thermostat_offline_alert

      # wait for timeout or automation to be turned back on
      - wait_template: "{{ is_state('automation.house_climate_thermostat_offline_alert', 'on') }}"
        timeout: '04:00:00' # mute alert for 4 hours
        continue_on_timeout: true

      # turn alert automation back on
      - service: automation.turn_on
        entity_id: automation.house_climate_upstairs_thermostat_offline_alert



